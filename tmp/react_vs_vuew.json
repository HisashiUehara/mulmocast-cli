{"$mulmocast":{"version":"1.0","credit":"closing"},"canvasSize":{"width":1280,"height":720},"speechParams":{"provider":"openai","speakers":{"Presenter":{"displayName":{"en":"Presenter","ja":"語り手"},"voiceId":"shimmer"}}},"title":"React vs Vue: A Front-End Framework Comparison","lang":"en","beats":[
  {
    "speaker":"Presenter",
    "text":"Welcome to today's presentation on React versus Vue. We'll explore the key differences, similarities, and use cases for these two popular front-end frameworks.",
    "image":{
      "type":"textSlide",
      "slide":{
        "title":"React vs Vue: A Front-End Framework Comparison",
        "bullets":[]
      }
    },
    "textSlideParams":{
      "cssStyles":["h1 { margin-top: 400px }"]
    }
  },
  {
    "speaker":"Presenter",
    "text":"Both React and Vue are JavaScript frameworks that help developers build interactive user interfaces. They share many similarities but differ in their approach and philosophy.",
    "image":{
      "type":"textSlide",
      "slide":{
        "title":"Framework Overview",
        "bullets":[
          "React: Developed by Facebook (2013)",
          "Vue: Created by Evan You (2014)",
          "Both: Component-based architecture",
          "Both: Virtual DOM for efficient rendering",
          "Both: Reactive and composable"
        ]
      }
    }
  },
  {
    "speaker":"Presenter",
    "text":"React's philosophy centers around JavaScript-first development. It uses JSX, which allows you to write HTML-like syntax directly in your JavaScript code.",
    "image":{
      "type":"markdown",
      "markdown":[
        "# React Component Example",
        "```jsx",
        "import React, { useState } from 'react';",
        "",
        "function Counter() {",
        "  const [count, setCount] = useState(0);",
        "  ",
        "  return (",
        "    <div className=\"counter\">",
        "      <h2>Count: {count}</h2>",
        "      <button onClick={() => setCount(count + 1)}>",
        "        Increment",
        "      </button>",
        "    </div>",
        "  );",
        "}",
        "```"
      ]
    }
  },
  {
    "speaker":"Presenter",
    "text":"Vue, on the other hand, embraces a more template-based approach with a clearer separation of concerns. It uses HTML templates with special directives.",
    "image":{
      "type":"markdown",
      "markdown":[
        "# Vue Component Example",
        "```vue",
        "<template>",
        "  <div class=\"counter\">",
        "    <h2>Count: {{ count }}</h2>",
        "    <button @click=\"increment\">",
        "      Increment",
        "    </button>",
        "  </div>",
        "</template>",
        "",
        "<script>",
        "export default {",
        "  data() {",
        "    return { count: 0 }",
        "  },",
        "  methods: {",
        "    increment() { this.count++ }",
        "  }",
        "}",
        "</script>",
        "```"
      ]
    }
  },
  {
    "speaker":"Presenter",
    "text":"Let's compare how state management works in both frameworks. React uses hooks in functional components, while Vue has its reactive data system.",
    "image":{
      "type":"textSlide",
      "slide":{
        "title":"State Management",
        "bullets":[
          "React: useState, useReducer hooks",
          "React: Context API for global state",
          "React: Redux, Recoil (external libraries)",
          "Vue: Reactive data properties",
          "Vue: Computed properties",
          "Vue: Vuex (official state management)"
        ]
      }
    }
  },
  {
    "speaker":"Presenter",
    "text":"Conditional rendering is handled differently in each framework. React uses JavaScript expressions, while Vue provides dedicated directives.",
    "image":{
      "type":"markdown",
      "markdown":[
        "# Conditional Rendering",
        "```jsx",
        "// React",
        "function Greeting({ isLoggedIn }) {",
        "  return (",
        "    <div>",
        "      {isLoggedIn ? (",
        "        <h1>Welcome back!</h1>",
        "      ) : (",
        "        <h1>Please sign in</h1>",
        "      )}",
        "    </div>",
        "  );",
        "}",
        "",
        "// Vue",
        "<template>",
        "  <div>",
        "    <h1 v-if=\"isLoggedIn\">Welcome back!</h1>",
        "    <h1 v-else>Please sign in</h1>",
        "  </div>",
        "</template>",
        "```"
      ]
    }
  },
  {
    "speaker":"Presenter",
    "text":"The learning curve differs between these frameworks. Vue is often considered easier to pick up for beginners, while React may take more time to master.",
    "image":{
      "type":"chart",
      "title":"Learning Curve Comparison",
      "chartData":{
        "type":"line",
        "data":{
          "labels":["Week 1","Week 2","Week 3","Week 4","Week 5","Week 6"],
          "datasets":[
            {
              "label":"React Proficiency",
              "data":[10,20,35,45,60,75],
              "backgroundColor":"rgba(54, 162, 235, 0.5)",
              "borderColor":"rgba(54, 162, 235, 1)",
              "borderWidth":2,
              "tension":0.3
            },
            {
              "label":"Vue Proficiency",
              "data":[15,35,50,65,75,85],
              "backgroundColor":"rgba(75, 192, 192, 0.5)",
              "borderColor":"rgba(75, 192, 192, 1)",
              "borderWidth":2,
              "tension":0.3
            }
          ]
        },
        "options":{
          "responsive":true,
          "animation":false,
          "scales": {
            "y": {
              "min": 0,
              "max": 100
            }
          }
        }
      }
    }
  },
  {
    "speaker":"Presenter",
    "text":"Both frameworks have their own ecosystems. React has a larger community and more third-party libraries, while Vue offers more official tooling.",
    "image":{
      "type":"mermaid",
      "title":"Framework Ecosystems",
      "code":{
        "kind":"text",
        "text":"graph TD\n    React[React Core] --> ReactRouter[React Router]\n    React --> Redux[Redux]\n    React --> MobX[MobX]\n    React --> NextJS[Next.js]\n    React --> Testing[Testing Library]\n    \n    Vue[Vue Core] --> VueRouter[Vue Router]\n    Vue --> Vuex[Vuex]\n    Vue --> Pinia[Pinia]\n    Vue --> NuxtJS[Nuxt.js]\n    Vue --> Composition[Composition API]"
      }
    }
  },
  {
    "speaker":"Presenter",
    "text":"When choosing between React and Vue, consider these key factors based on your project needs and team expertise.",
    "image":{
      "type":"textSlide",
      "slide":{
        "title":"When to Choose Each Framework",
        "bullets":[
          "Choose React when:",
          "- Building large-scale applications",
          "- Need maximum flexibility",
          "- Have experienced JS developers",
          "- Want largest ecosystem and job market",
          "",
          "Choose Vue when:",
          "- Need gentle learning curve",
          "- Want clear separation of concerns",
          "- Building progressive applications",
          "- Prefer more built-in features"
        ]
      }
    }
  },
  {
    "speaker":"Presenter",
    "text":"Let's look at the performance metrics for both frameworks. While both are performant, there are subtle differences in various operations.",
    "image":{
      "type":"chart",
      "title":"Performance Comparison (Lower is Better)",
      "chartData":{
        "type":"bar",
        "data":{
          "labels":["Initial Render","DOM Updates","Memory Usage","Bundle Size"],
          "datasets":[
            {
              "label":"React (ms/KB)",
              "data":[23,15,42,112],
              "backgroundColor":"rgba(54, 162, 235, 0.5)",
              "borderColor":"rgba(54, 162, 235, 1)",
              "borderWidth":1
            },
            {
              "label":"Vue (ms/KB)",
              "data":[21,13,38,91],
              "backgroundColor":"rgba(75, 192, 192, 0.5)",
              "borderColor":"rgba(75, 192, 192, 1)",
              "borderWidth":1
            }
          ]
        },
        "options":{
          "responsive":true,
          "animation":false
        }
      }
    }
  },
  {
    "speaker":"Presenter",
    "text":"To conclude, both React and Vue are excellent choices for modern web development. Your choice should depend on your specific project requirements, team expertise, and personal preference.",
    "image":{
      "type":"textSlide",
      "slide":{
        "title":"Key Takeaways",
        "bullets":[
          "React: JavaScript-centric, flexible, larger ecosystem",
          "Vue: Template-based, easier learning curve, more built-in features",
          "Both: Excellent performance and component-based architecture",
          "Both: Active development and strong communities",
          "The best choice depends on your specific project needs"
        ]
      }
    }
  },
  {
    "speaker":"Presenter",
    "text":"Thank you for attending today's presentation. Are there any questions about React, Vue, or how to choose between them for your next project?",
    "image":{
      "type":"textSlide",
      "slide":{
        "title":"Questions?",
        "bullets":[]
      }
    },
    "textSlideParams":{
      "cssStyles":["h1 { margin-top: 400px; font-size: 72px; }"]
    }
  }
]}
